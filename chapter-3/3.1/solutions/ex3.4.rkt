#lang racket
(require sicp)
(print-as-expression #f)
(print-mpair-curly-braces #f)


; (define (make-account balance password)
;   (define counter 0)
;   (define (withdraw amount)
;     (if (>= balance amount)
;         (begin (set! balance (- balance amount))
;                balance)
;         "Insufficient funds"))
;   (define (deposit amount)
;     (set! balance (+ balance amount))
;     balance)
;   (define (security pw)
;     (if (eq? pw password)
;         (begin (set! counter 0) #t)
;         (begin (set! counter (+ counter 1)) #f)))
;   (define (call-the-cops i)
;     "Called the police")
;   (define (dispatch pw m)
;     (if (security pw)
;         (cond ((eq? m 'withdraw) withdraw)
;               ((eq? m 'deposit) deposit)
;               (else (error "Unknown request -- MAKE-ACCOUNT"
;                            m)))
;             (if (> counter 7)
;                    call-the-cops
;                    (lambda (i) "Incorrect password"))))
;   dispatch)

(define (make-account balance password)
  (define counter 0)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (verifier pw)
        (if (eq? pw password)
            (begin (set! counter 0) #t)
            (begin (set! counter (+ counter 1))
                   (if (> counter 7)
                       (error "CALLED POLICE")
                       #f))))
  (define (dispatch pw m)
    (cond ((not (verifier pw)) (lambda (i) "Incorrect password"))
          ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m))))
  dispatch)

(define acc (make-account 100 'secret-password))

((acc 'secret-password 'withdraw) 40) ;; 60
((acc 'some-other-password 'deposit) 50) ;; "Incorrect password"
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50) ;; "Called the police"
